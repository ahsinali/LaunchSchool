[1mdiff --git a/.rubocop.yml b/.rubocop.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..2135211[m
[1m--- /dev/null[m
[1m+++ b/.rubocop.yml[m
[36m@@ -0,0 +1,345 @@[m
[32m+[m[32m# .rubocop.yml for RB101 Lessons 2-5 (17 Mar 2021)[m
[32m+[m
[32m+[m[32mAllCops:[m
[32m+[m[32m  # Display cop names[m
[32m+[m[32m  DisplayCopNames: true[m
[32m+[m[32m  # Display Extra details[m
[32m+[m[32m  ExtraDetails: true[m
[32m+[m[32m  # Style guide URLs are not displayed in offense messages by default. Change[m
[32m+[m[32m  # behavior by overriding DisplayStyleGuide, or by giving the[m
[32m+[m[32m  # -S/--display-style-guide option.[m
[32m+[m[32m  DisplayStyleGuide: true[m
[32m+[m[32m  # When specifying style guide URLs, any paths and/or fragments will be[m
[32m+[m[32m  # evaluated relative to the base URL.[m
[32m+[m[32m  StyleGuideBaseURL: https://rubystyle.guide/[m
[32m+[m[32m  # What version of the Ruby interpreter is the inspected code intended to[m
[32m+[m[32m  # run on? (If there is more than one, set this to the lowest version.)[m
[32m+[m[32m  TargetRubyVersion: 2.4[m
[32m+[m
[32m+[m[32mStyle/BlockComments:[m
[32m+[m[32m  Description: 'Do not use block comments.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/CommandLiteral:[m
[32m+[m[32m  Description: 'Use `` or %x around command literals.'[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  # backticks: Always use backticks.[m
[32m+[m[32m  # percent_x: Always use %x.[m
[32m+[m[32m  # mixed: Use backticks on single-line commands, and %x on multi-line commands.[m
[32m+[m[32m  EnforcedStyle: mixed[m
[32m+[m[32m  SupportedStyles:[m
[32m+[m[32m    - backticks[m
[32m+[m[32m    - percent_x[m
[32m+[m[32m    - mixed[m
[32m+[m[32m  # If false, the cop will always recommend using %x if one or more backticks[m
[32m+[m[32m  # are found in the command string.[m
[32m+[m[32m  AllowInnerBackticks: false[m
[32m+[m
[32m+[m[32mStyle/CommentAnnotation:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m    Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW).[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/Documentation:[m
[32m+[m[32m  Description: 'Document classes and non-namespace modules.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/DoubleNegation:[m
[32m+[m[32m  Description: 'Checks for uses of double negation (!!).'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLayout/EmptyLineBetweenDefs:[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  AllowAdjacentOneLineDefs: true[m
[32m+[m
[32m+[m[32mStyle/EmptyLiteral:[m
[32m+[m[32m  Description: Prefer literals to Array.new/Hash.new/String.new.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/FrozenStringLiteralComment:[m
[32m+[m[32m  Enabled: false[m
[32m+[m[32m  Description: Require the addition of the frozen string literal comment.[m
[32m+[m
[32m+[m[32mStyle/GuardClause:[m
[32m+[m[32m  Description: Check for conditionals that can be replaced with guard clauses.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/HashSyntax:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m                 Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax[m
[32m+[m[32m                 { :a => 1, :b => 2 }.[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  EnforcedStyle: ruby19_no_mixed_keys[m
[32m+[m[32m  UseHashRocketsWithSymbolValues: false[m
[32m+[m[32m  PreferHashRocketsForNonAlnumEndingSymbols: false[m
[32m+[m
[32m+[m[32mStyle/IfUnlessModifier:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m                 Favor modifier if/unless usage when you have a[m
[32m+[m[32m                 single-line body.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/InlineComment:[m
[32m+[m[32m  Description: Avoid inline comments.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/MethodCallWithoutArgsParentheses:[m
[32m+[m[32m  Description: Do not use parentheses for method calls with no arguments.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/ModuleFunction:[m
[32m+[m[32m  Description: Checks for usage of `extend self` in modules.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/MutableConstant:[m
[32m+[m[32m  Description: Freeze mutable constants.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/NegatedIf:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m                 Favor unless over if for negative conditions[m
[32m+[m[32m                 (or control flow or).[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/NegatedWhile:[m
[32m+[m[32m  Description: 'Favor until over while for negative conditions.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/Next:[m
[32m+[m[32m  Description: 'Use `next` to skip iteration instead of a condition at the end.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/NumericLiterals:[m
[32m+[m[32m  Description: Add underscores to large numeric literals to improve their readability.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/NumericPredicate:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m                 Checks for the use of predicate- or comparison methods for[m
[32m+[m[32m                 numeric comparisons.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/OneLineConditional:[m
[32m+[m[32m  Description: Favor the ternary operator(?:) over if/then/else/end constructs.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mNaming/BinaryOperatorParameterName:[m
[32m+[m[32m  Description: When defining binary operators, name the argument other.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/ParenthesesAroundCondition:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m                 Don't use parentheses around the condition of an[m
[32m+[m[32m                 if/unless/while.[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  AllowSafeAssignment: false[m
[32m+[m
[32m+[m[32mStyle/PercentLiteralDelimiters:[m
[32m+[m[32m  Description: 'Use `%`-literal delimiters consistently'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/PerlBackrefs:[m
[32m+[m[32m  Description: Avoid Perl-style regex back references.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/Proc:[m
[32m+[m[32m  Description: Use proc instead of Proc.new.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/RedundantFetchBlock:[m
[32m+[m[32m  Description: Only way to keep FetchBlock warning from popping up.[m
[32m+[m[32m  Enabled: true[m
[32m+[m
[32m+[m[32mStyle/RedundantParentheses:[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/RedundantReturn:[m
[32m+[m[32m  Description: "Don't use return where it's not required."[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  # When true allows code like `return x, y`.[m
[32m+[m[32m  AllowMultipleReturnValues: true[m
[32m+[m
[32m+[m[32mStyle/RegexpLiteral:[m
[32m+[m[32m  Description: 'Use / or %r around regular expressions.'[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  EnforcedStyle: mixed[m
[32m+[m[32m  AllowInnerSlashes: false[m
[32m+[m
[32m+[m[32mStyle/SafeNavigation:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m                  This cop transforms usages of a method call safeguarded by[m
[32m+[m[32m                  a check for the existance of the object to[m
[32m+[m[32m                  safe navigation (`&.`).[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/SingleLineBlockParams:[m
[32m+[m[32m  Description: Enforces the names of some block params.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/SingleLineMethods:[m
[32m+[m[32m  Description: Avoid single-line methods.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLayout/SpaceAroundEqualsInParameterDefault:[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/StringLiterals:[m
[32m+[m[32m  Description: Force use of single or double quotes when no interpolation[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/SymbolArray:[m
[32m+[m[32m  Description: 'Use %i or %I for arrays of symbols.'[m
[32m+[m[32m  StyleGuide: '#percent-i'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/WhileUntilModifier:[m
[32m+[m[32m  Description: Favor modifier while/until usage when you have a single-line body.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/WordArray:[m
[32m+[m[32m  Description: 'Use %w or %W for arrays of words.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mMetrics/AbcSize:[m
[32m+[m[32m  Description: >-[m
[32m+[m[32m                 A calculated magnitude based on number of assignments,[m
[32m+[m[32m                 branches, and conditions.[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  Max: 18[m
[32m+[m
[32m+[m[32mMetrics/BlockLength:[m
[32m+[m[32m  Description: Limit size of blocks.[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mMetrics/ClassLength:[m
[32m+[m[32m  Description: 'Avoid classes longer than 100 lines of code.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLayout/LineLength:[m
[32m+[m[32m  Description: Limit lines to 80 characters.[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  Max: 80[m
[32m+[m[32m  StyleGuide: https://rubystyle.guide/#80-character-limits[m
[32m+[m[32m  AllowURI: true[m
[32m+[m[32m  URISchemes:[m
[32m+[m[32m  - http[m
[32m+[m[32m  - https[m
[32m+[m
[32m+[m[32mMetrics/MethodLength:[m
[32m+[m[32m  Description: 'Avoid methods longer than 15 lines of code.'[m
[32m+[m[32m  Enabled: true[m
[32m+[m[32m  CountComments: false  # count full line comments?[m
[32m+[m[32m  Max: 15[m
[32m+[m
[32m+[m[32mLint/LiteralInInterpolation:[m
[32m+[m[32m  Description: 'Avoid interpolating literals in strings'[m
[32m+[m[32m  AutoCorrect: false[m
[32m+[m[32m  Enabled: true[m
[32m+[m
[32m+[m[32mLayout/EmptyLinesAroundAttributeAccessor:[m
[32m+[m[32m  Description: 'Checks for a newline after an attribute accessor or a group of them.'[m
[32m+[m[32m  Enabled: true[m
[32m+[m
[32m+[m[32mLayout/SpaceAroundMethodCallOperator:[m
[32m+[m[32m  Description: 'Checks method call operators to not have spaces around them.'[m
[32m+[m[32m  Enabled: true[m
[32m+[m
[32m+[m[32mLint/DeprecatedOpenSSLConstant:[m
[32m+[m[32m  Description: 'Algorithmic constants for OpenSSL::Cipher and OpenSSL::Digest deprecated since OpenSSL version 2.2.0. Prefer passing a string instead.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLint/MixedRegexpCaptureTypes:[m
[32m+[m[32m  Description: 'Do not mix named captures and numbered captures'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLint/RaiseException:[m
[32m+[m[32m  Description: 'Checks for raise or fail statements which are raising Exception class.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLint/StructNewOverride:[m
[32m+[m[32m  Description: 'Checks unexpected overrides of the Struct built-in methods via Struct.new'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/ExponentialNotation:[m
[32m+[m[32m  Description: 'Enforces consistency when using exponential notation for numbers in the code'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/HashTransformKeys:[m
[32m+[m[32m  Description: 'Tries to use a simpler & faster call to transform_keys where possible'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/HashTransformValues:[m
[32m+[m[32m  Description: 'Tries to use a simpler & faster call to transform_values where possible'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/RedundantRegexpCharacterClass:[m
[32m+[m[32m  Description: 'Checks for unnecessary single-element Regexp character classes.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/RedundantRegexpEscape:[m
[32m+[m[32m  Description: 'Checks for redundant escapes inside Regexp literals'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/SlicingWithRange:[m
[32m+[m[32m  Description: 'Checks that arrays are sliced with endless ranges instead of ary[start..-1]'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/FormatStringToken:[m
[32m+[m[32m  Description: 'Use a consistent style for named format string tokens.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLayout/EmptyLineAfterGuardClause:[m
[32m+[m[32m  Description: 'Requires empty line after guard clause'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/FloatDivision:[m
[32m+[m[32m  Description: 'Checks for division with integers coerced to floats.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mNaming/MethodParameterName:[m
[32m+[m[32m  Description: 'Parameter names at least 3 characters long'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/ConditionalAssignment:[m
[32m+[m[32m  Description: 'Use return value of conditional for assignment'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mNaming/AccessorMethodName:[m
[32m+[m[32m  Description: 'Do not prefix reader method names with get_'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/NegatedUnless:[m
[32m+[m[32m  Description: 'Favor if over unless'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/MultipleComparison:[m
[32m+[m[32m  Description: 'Avoid comparing variable with multiple items'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLayout/HeredocIndentation:[m
[32m+[m[32m  Description: 'Checks the indentation of the here document bodies'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mLayout/ClosingHeredocIndentation:[m
[32m+[m[32m  Description: 'Checks the indentation of here document closings.'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/CommentedKeyword:[m
[32m+[m[32m  Description: 'Comments should not be on same line as def'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/HashEachMethods:[m
[32m+[m[32m  Description: 'each_key over keys.each'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/MultilineWhenThen:[m
[32m+[m[32m  Description: 'Avoid then for multiline when statement'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/InverseMethods:[m
[32m+[m[32m  Description: 'reject instead of reversed select'[m
[32m+[m[32m  Enabled: false[m
[32m+[m
[32m+[m[32mStyle/ZeroLengthPredicate:[m
[32m+[m[32m  Description: 'empty? instead of length == 0'[m
[32m+[m[32m  Enabled: false[m
[1mdiff --git a/.swp b/.swp[m
[1mnew file mode 100644[m
[1mindex 0000000..90cd2b6[m
Binary files /dev/null and b/.swp differ
[1mdiff --git a/LICENSE.md b/LICENSE.md[m
[1mnew file mode 100644[m
[1mindex 0000000..3088a36[m
[1m--- /dev/null[m
[1m+++ b/LICENSE.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# LICENSE #[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..0647d92[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m# README #[m
[1mdiff --git a/RockPaperSci/rps_bonus.rb b/RockPaperSci/rps_bonus.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..32a0c61[m
[1m--- /dev/null[m
[1m+++ b/RockPaperSci/rps_bonus.rb[m
[36m@@ -0,0 +1,74 @@[m
[32m+[m[32mrequire 'yaml'[m
[32m+[m[32mMESSAGES = YAML.load_file('rps_bonus.yml')[m
[32m+[m
[32m+[m[32mVALID_CHOICES = %w(r p sc sp l)[m
[32m+[m[32mVALID_CHOICES_DETAILS = { 'r' => 'rock', 'p' => 'paper', 'sc' => 'scissors',[m
[32m+[m[32m                          'sp' => 'spock', 'l' => 'lizard' }[m
[32m+[m[32mWINNING_COMB = { 'r' => ['sc', 'l'], 'p' => ['r', 'sp'], 'sc' => ['p', 'l'],[m
[32m+[m[32m                 'sp' => ['r', 'sc'], 'l' => ['sp', 'p'] }[m
[32m+[m
[32m+[m[32mdef win?(player1, player2)[m
[32m+[m[32m  WINNING_COMB[player1].include?(player2)[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef display_result(player, computer)[m
[32m+[m[32m  if win?(player, computer)[m
[32m+[m[32m    prompt "You won!"[m
[32m+[m[32m  elsif win?(computer, player)[m
[32m+[m[32m    prompt "Computer won"[m
[32m+[m[32m  else[m
[32m+[m[32m    prompt "Its a tie"[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef prompt(message)[m
[32m+[m[32m  puts("=> #{message}")[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mprompt MESSAGES['welcome'][m
[32m+[m
[32m+[m[32mname = ''[m
[32m+[m[32mloop do[m
[32m+[m[32m  name = gets.chomp[m
[32m+[m[32m  break if !name.empty?()[m
[32m+[m
[32m+[m[32m  prompt MESSAGES['valid_name'][m
[32m+[m[32mend[m
[32m+[m[32mprompt "Hello #{name}"[m
[32m+[m
[32m+[m[32mprompt "Do you want to review the rules? (Press 'y' to review rules)"[m
[32m+[m
[32m+[m[32mrules_review = gets.chomp[m
[32m+[m
[32m+[m[32mif rules_review.downcase.start_with?('y')[m
[32m+[m[32m  prompt MESSAGES['rules'][m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mloop do[m
[32m+[m[32m  prompt "Choose One:"[m
[32m+[m[32m  VALID_CHOICES_DETAILS.each do |k, v|[m
[32m+[m[32m    prompt "#{k} for #{v}"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  choice = ''[m
[32m+[m[32m  loop do[m
[32m+[m[32m    choice = gets.chomp[m
[32m+[m[32m    break if VALID_CHOICES.include?(choice)[m
[32m+[m
[32m+[m[32m    prompt "Thats not a valid choice"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  computer_choice = VALID_CHOICES.sample[m
[32m+[m
[32m+[m[32m  prompt "You chose #{VALID_CHOICES_DETAILS[choice]} and computer chose #{VALID_CHOICES_DETAILS[computer_choice]}"[m
[32m+[m
[32m+[m[32m  display_result(choice, computer_choice)[m
[32m+[m
[32m+[m[32m  prompt "Do you want to play again? (y to play again)"[m
[32m+[m
[32m+[m[32m  answer = gets.chomp[m
[32m+[m
[32m+[m[32m  break unless answer.downcase.start_with?('y')[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mprompt "Thank you #{name} for playing"[m
[1mdiff --git a/rps_bonus.yml b/RockPaperSci/rps_bonus.yml[m
[1msimilarity index 100%[m
[1mrename from rps_bonus.yml[m
[1mrename to RockPaperSci/rps_bonus.yml[m
[1mdiff --git a/calculator/calculator.rb b/calculator/calculator.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..8e809a0[m
[1m--- /dev/null[m
[1m+++ b/calculator/calculator.rb[m
[36m@@ -0,0 +1,91 @@[m
[32m+[m[32m=begin[m
[32m+[m[32mSimple Calculator in Ruby[m
[32m+[m[32m=end[m
[32m+[m
[32m+[m[32mrequire 'yaml'[m
[32m+[m[32mMESSAGES = YAML.load_file('calculator_messages.yml')[m
[32m+[m
[32m+[m[32mdef prompt(message)[m
[32m+[m[32m  puts ("=> #{message}")[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef valid_int?(num)[m
[32m+[m[32m  num.to_i.to_s == num[m
[32m+[m[32mend[m[41m [m
[32m+[m
[32m+[m[32mdef valid_float?(num)[m
[32m+[m[32m  num.to_f.to_s == num[m
[32m+[m[32mend[m[41m [m
[32m+[m
[32m+[m[32mdef valid_number?(num)[m
[32m+[m[32m  #num.to_i.to_s == num[m
[32m+[m[32m  valid_int?(num) || valid_float?(num)[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mprompt MESSAGES['welcome'][m
[32m+[m
[32m+[m[32mname = ''[m
[32m+[m[32mloop do[m
[32m+[m[32m  name = gets.chomp[m
[32m+[m[32m  break if !name.empty?()[m
[32m+[m
[32m+[m[32m  prompt MESSAGES['valid_name'][m
[32m+[m[32mend[m
[32m+[m[32mprompt "Hello #{name}"[m
[32m+[m[32mloop do[m
[32m+[m[41m  [m
[32m+[m[32m  first_num = nil[m
[32m+[m[32m  second_num = nil[m
[32m+[m[32m  loop do[m
[32m+[m[41m    [m
[32m+[m[32m    prompt MESSAGES['first_num'][m
[32m+[m
[32m+[m[32m    first_num = gets.chomp()[m
[32m+[m[32m    break if valid_number?(first_num) # Check if its a valid number[m
[32m+[m[32m    prompt MESSAGES['valid_number'][m
[32m+[m[32m  end[m[41m [m
[32m+[m
[32m+[m[32m  loop do[m
[32m+[m
[32m+[m[32m    prompt MESSAGES['second_num'][m
[32m+[m
[32m+[m[32m    second_num = gets.chomp()[m
[32m+[m[32m    break if valid_number?(second_num) # Check if its a valid number[m
[32m+[m[32m    prompt MESSAGES['valid_number'][m
[32m+[m
[32m+[m[32m  end[m[41m [m
[32m+[m
[32m+[m[32m  operator_prompt = <<-MSG "What operation do you want to use:"[m[41m [m
[32m+[m[32m      "1. Add[m
[32m+[m[32m      2. Subtract[m
[32m+[m[32m      3. Multiply[m
[32m+[m[32m      4. Divide"[m
[32m+[m
[32m+[m[32m  MSG[m
[32m+[m
[32m+[m[32m  prompt(operator_prompt)[m
[32m+[m[32m  operator = nil[m
[32m+[m[32m  loop do[m
[32m+[m[32m    operator = gets.chomp[m
[32m+[m[32m    break if %w(1 2 3 4).include?(operator)[m
[32m+[m[32m    prompt "Please choose 1,2,3 or 4"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m   result = case operator[m[41m [m
[32m+[m[32m            when '1'[m
[32m+[m[32m              first_num.to_f + second_num.to_f[m
[32m+[m[32m            when '2'[m
[32m+[m[32m              first_num.to_f - second_num.to_f[m
[32m+[m[32m            when '3'[m
[32m+[m[32m              first_num.to_f * second_num.to_f[m
[32m+[m[32m            when '4'[m
[32m+[m[32m              first_num.to_f / second_num.to_f[m
[32m+[m[32m          end[m
[32m+[m
[32m+[m[32m  prompt("the results is #{result}")[m
[32m+[m
[32m+[m[32m  prompt "Do you want to perform another calculation? (Y to calculate again)"[m
[32m+[m[32m  answer = gets.chomp[m
[32m+[m[32m  break unless answer.downcase.start_with?('y')[m
[32m+[m
[32m+[m[32mend[m
\ No newline at end of file[m
[1mdiff --git a/calculator/calculator_messages.yml b/calculator/calculator_messages.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..9615418[m
[1m--- /dev/null[m
[1m+++ b/calculator/calculator_messages.yml[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mwelcome: "Welcome to Calculator! Please Enter your name:"[m
[32m+[m[32mvalid_name: "Make sure to enter a valid Name."[m
[32m+[m[32mfirst_num: "Please enter first number"[m
[32m+[m[32msecond_num: "Please enter second number"[m
[32m+[m[32mvalid_number: "Please enter a valid number"[m
\ No newline at end of file[m
[1mdiff --git a/calculator/mortgage_calculator.rb b/calculator/mortgage_calculator.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..caaf242[m
[1m--- /dev/null[m
[1m+++ b/calculator/mortgage_calculator.rb[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m
[32m+[m[32mdef prompt(message)[m
[32m+[m[32m  puts(">> #{message}")[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef valid_float?(num)[m
[32m+[m[32m  num.to_f.to_s == num && num.to_f >=0[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef valid_int?(num)[m
[32m+[m[32m  num.to_i.to_s == num && num.to_i >=0[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mloop do[m
[32m+[m[32m  prompt "Enter your Name"[m
[32m+[m[32m  name = gets.chomp[m
[32m+[m[32m  prompt "Hello #{name}"[m
[32m+[m
[32m+[m[32m  prompt "Please Enter Loan Amount"[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[32m  loan_amt = nil[m
[32m+[m[32m  loop do[m[41m [m
[32m+[m[32m    loan_amt = gets.chomp[m
[32m+[m[32m    break if valid_float?(loan_amt) || valid_int?(loan_amt)[m
[32m+[m[41m    [m
[32m+[m[32m    # if num is invalid[m
[32m+[m[32m    prompt "Please enter a valid number"[m
[32m+[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  prompt "Please enter an monthly interest rate in APR %"[m
[32m+[m[32m  int_rate = nil[m
[32m+[m[32m  loop do[m
[32m+[m[32m    int_rate = gets.chomp[m
[32m+[m[32m    break if valid_float?(int_rate) || valid_int?(int_rate)[m
[32m+[m
[32m+[m[32m    prompt "Please enter a valid interest rate number"[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  prompt "Please enter the tenor in years and months"[m
[32m+[m
[32m+[m[32m  years = nil[m
[32m+[m[32m  loop do[m[41m [m
[32m+[m[32m    prompt "number of years"[m
[32m+[m[32m    years = gets.chomp[m
[32m+[m[32m    break if valid_int?(years)[m[41m [m
[32m+[m
[32m+[m[32m    prompt "Please enter a valid integer for years"[m
[32m+[m[32m  end[m
[32m+[m[32m  months = nil[m
[32m+[m[32m  loop do[m[41m [m
[32m+[m[32m    prompt "Months"[m
[32m+[m[32m    months = gets.chomp[m
[32m+[m[32m    break if valid_int?(months) && months.to_i < 12[m
[32m+[m
[32m+[m[32m    prompt "Please enter a valid integer for months between 0 and 11"[m
[32m+[m[32m  end[m
[32m+[m[32m  int_rate = int_rate.to_f/1200[m
[32m+[m[32m  loan_duration = (years.to_i )*12 + months.to_i[m
[32m+[m
[32m+[m[32m  payment = loan_amt.to_f * (int_rate.to_f / (1 - (1 + int_rate.to_f)**(-loan_duration.to_i)))[m
[32m+[m
[32m+[m[32m  prompt "The monthly payment is #{payment.round(3)}"[m
[32m+[m
[32m+[m[32m  prompt "Do you want to perform another calculation? (Y to calculate again)"[m
[32m+[m[32m  answer = gets.chomp[m
[32m+[m[32m  break unless answer.downcase.start_with?('y')[m
[32m+[m[32mend[m
[1mdiff --git a/lesson_6/Twenty_One_Game/twenty_one.rb b/lesson_6/Twenty_One_Game/twenty_one.rb[m
[1mnew file mode 100644[m
[1mindex 0000000..f441918[m
[1m--- /dev/null[m
[1m+++ b/lesson_6/Twenty_One_Game/twenty_one.rb[m
[36m@@ -0,0 +1,153 @@[m
[32m+[m[32mrequire 'pry'[m
[32m+[m[32mSUITS = ['H', 'D', 'C', 'S'][m
[32m+[m[32mVALUES = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack',[m
[32m+[m[32m          'Queen', 'King', 'Ace'][m
[32m+[m
[32m+[m[32minitial_cards = SUITS.product(VALUES).shuffle![m
[32m+[m[32mcards = { "deck" => initial_cards, "player" => [], "dealer" => [] }[m
[32m+[m
[32m+[m[32mdef prompt(str)[m
[32m+[m[32m  puts ">>>>>  " + str[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef deal_cards(cards)[m
[32m+[m[32m  cards["player"] = cards["deck"].shift(2)[m
[32m+[m[32m  cards["dealer"] = cards["deck"].shift(2)[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef create_display_string(cards, hand, player_turn)[m
[32m+[m[32m  cards_string = ''[m
[32m+[m[32m  cards_on_hand = card_numbers(cards, hand)[m
[32m+[m[32m  if hand == 'dealer' && player_turn[m
[32m+[m[32m    cards_string = cards_on_hand[0, cards_on_hand.size - 1].join(',') + \[m
[32m+[m[32m                   ' and unknown'[m
[32m+[m[32m  else[m
[32m+[m[32m    cards_string = cards_on_hand[0, cards_on_hand.size - 1].join(',') + \[m
[32m+[m[32m                   ' and ' + cards_on_hand[cards_on_hand.size - 1][m
[32m+[m[32m  end[m
[32m+[m[32m  cards_string[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef display_cards(cards, player_turn)[m
[32m+[m[32m  prompt "Player has " + create_display_string(cards, 'player', player_turn)[m
[32m+[m[32m  prompt "Dealer has " + create_display_string(cards, 'dealer', player_turn)[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef card_numbers(cards, hand)[m
[32m+[m[32m  cards[hand].map do |num|[m
[32m+[m[32m    num[1][m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef deal_additional_card(cards, side)[m
[32m+[m[32m  cards[side].push(cards["deck"].shift(1).flatten)[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef includes_ace?(hand)[m
[32m+[m[32m  hand.include?("Ace")[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef card_value(hand)[m
[32m+[m[32m  case hand[m
[32m+[m[32m  when 'Jack'[m
[32m+[m[32m    11[m
[32m+[m[32m  when 'Queen'[m
[32m+[m[32m    12[m
[32m+[m[32m  when 'King'[m
[32m+[m[32m    13[m
[32m+[m[32m  else[m
[32m+[m[32m    hand.to_i[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef non_ace_cards(hand)[m
[32m+[m[32m  hand.select do |crd|[m
[32m+[m[32m    crd != "Ace"[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef points_ex_ace(hand)[m
[32m+[m[32m  crd = non_ace_cards(hand)[m
[32m+[m[32m  points = crd.reduce(0) do |sum, x|[m
[32m+[m[32m    sum + card_value(x)[m
[32m+[m[32m  end[m
[32m+[m[32m  points[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef num_aces(hand)[m
[32m+[m[32m  hand.count { |ele| ele == "Ace" }[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef determine_ace_value(hand)[m
[32m+[m[32m  points_before = points_ex_ace(hand)[m
[32m+[m[32m  num_of_aces = num_aces(hand)[m
[32m+[m[32m  max_ace_value = 0[m
[32m+[m[32m  min_ace_value = 0[m
[32m+[m[32m  if num_of_aces > 0[m
[32m+[m[32m    max_ace_value = 11 + (num_of_aces - 1) * 1[m
[32m+[m[32m    min_ace_value = num_of_aces * 1[m
[32m+[m[32m  end[m
[32m+[m[32m  (21 - points_before) > max_ace_value ? max_ace_value : min_ace_value[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef detect_winner(player_points, dealer_points)[m
[32m+[m[32m  if dealer_points > 21[m
[32m+[m[32m    'player'[m
[32m+[m[32m  elsif dealer_points >= 17 && dealer_points > player_points[m
[32m+[m[32m    'dealer'[m
[32m+[m[32m  elsif player_points > 21[m
[32m+[m[32m    'dealer'[m
[32m+[m[32m  end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef someone_won?(player_points, dealer_points)[m
[32m+[m[32m  !!detect_winner(player_points, dealer_points)[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdef calculate_points(hand)[m
[32m+[m[32m  total_points = if hand.include?("Ace")[m
[32m+[m[32m                   (points_ex_ace(hand) + determine_ace_value(hand))[m
[32m+[m[32m                 else[m
[32m+[m[32m                   points_ex_ace(hand)[m
[32m+[m[32m                 end[m
[32m+[m[32m  total_points[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mdeal_cards(cards)[m
[32m+[m
[32m+[m[32mbust = false[m
[32m+[m[32mplayer_points = 0[m
[32m+[m[32mdealer_points = 0[m
[32m+[m[32mplayer_turn = true[m
[32m+[m
[32m+[m[32mloop do[m
[32m+[m[32m  hand = card_numbers(cards, "player")[m
[32m+[m[32m  player_points = calculate_points(hand)[m
[32m+[m[32m  bust = player_points > 21[m
[32m+[m[32m  break if bust[m
[32m+[m[32m  display_cards(cards, player_turn)[m
[32m+[m[32m  prompt "Player Points are: #{player_points}"[m
[32m+[m[32m  puts "hit or stay?"[m
[32m+[m[32m  answer = gets.chomp[m
[32m+[m[32m  break if answer == 'stay'[m
[32m+[m[32m  deal_additional_card(cards, 'player')[m
[32m+[m[32mend[m
[32m+[m[32mplayer_turn = false[m
[32m+[m[32mif player_points > 21[m
[32m+[m[32m  display_cards(cards, player_turn)[m
[32m+[m[32m  prompt "Player has #{player_points} points......Player loses"[m
[32m+[m[32melsif loop do[m
[32m+[m[32m        display_cards(cards, player_turn)[m
[32m+[m[32m        hand = card_numbers(cards, "dealer")[m
[32m+[m[32m        dealer_points = calculate_points(hand)[m
[32m+[m[32m        prompt "Player Points are: #{player_points}"[m
[32m+[m[32m        prompt "And Dealer Points are: #{dealer_points}"[m
[32m+[m[32m        prompt "Enter any Key to continue"[m
[32m+[m[32m        break if someone_won?(player_points, dealer_points)[m
[32m+[m[32m        prompt "Enter any key to continue"[m
[32m+[m[32m        answer = gets.chomp[m
[32m+[m[32m        deal_additional_card(cards, 'dealer')[m
[32m+[m[32m      end[m
[32m+[m[32mend[m
[32m+[m
[32m+[m[32mprompt "#{detect_winner(player_points, dealer_points)} Won"[m
[1mdiff --git a/rps_oop.rb b/rps_oop.rb[m
[1mdeleted file mode 100644[m
[1mindex a4137cc..0000000[m
[1m--- a/rps_oop.rb[m
[1m+++ /dev/null[m
[36m@@ -1,216 +0,0 @@[m
[31m-require 'yaml'[m
[31m-MESSAGES = YAML.load_file('rps_bonus.yml')[m
[31m-[m
[31m-MOVES = ['rock', 'paper', 'scissor', 'spock', 'lizard'][m
[31m-COMPUTER_NAMES = ['MARIO', 'LUIGI', 'PEACH', 'BOWSER'][m
[31m-COMPUTER_MOVES = { 'PEACH' => ['rock'],[m
[31m-                   'LUIGI' => [MOVES, 'scissor', 'scissor'].flatten,[m
[31m-                   'BOWSER' => [MOVES, 'rock', 'paper'].flatten }[m
[31m-[m
[31m-WINNING_COMB = { 'rock' => ['scissor', 'lizard'], 'paper' => ['rock', 'spock'],[m
[31m-                 'scissor' => ['paper', 'lizard'],[m
[31m-                 'spock' => ['rock', 'scissor'],[m
[31m-                 'lizard' => ['spock', 'paper'] }[m
[31m-[m
[31m-module DisplayMessages[m
[31m-  def prompt(message)[m
[31m-    puts("=> #{message}")[m
[31m-  end[m
[31m-[m
[31m-  def welcome[m
[31m-    prompt MESSAGES['welcome'][m
[31m-  end[m
[31m-[m
[31m-  def display_move[m
[31m-    str = '-' * 50[m
[31m-    str += "\n\n=>#{name} chose #{move.move_type}\n\n"[m
[31m-    str += '-' * 50[m
[31m-    puts str[m
[31m-  end[m
[31m-[m
[31m-  def display_score(p1, p2)[m
[31m-    str = '*' * 50[m
[31m-    str += "\n\n=>#{p1.name} score: #{p1.score} and #{p2.name}[m
[31m-            score: #{p2.score}\n\n"[m
[31m-    str += '*' * 50[m
[31m-    puts str[m
[31m-  end[m
[31m-[m
[31m-  def display_winner[m
[31m-    str = '*' * 50[m
[31m-    str += "\n\n=>#{name} wins\n\n"[m
[31m-    str += '*' * 50[m
[31m-    puts str[m
[31m-  end[m
[31m-[m
[31m-  def display_history[m
[31m-    move_length = move_record.length[m
[31m-    str = '*' * 50[m
[31m-    if move_length == 1[m
[31m-      str += "\n\nOnly move made by #{name} is #{move_record[0]}\n\n"[m
[31m-    else[m
[31m-      str += "\n\nMoves made by #{name} are "[m
[31m-      str += move_record[0, move_length - 1] \[m
[31m-             .join(',').concat(' and ', move_record[-1])[m
[31m-    end[m
[31m-    puts str[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-class Player[m
[31m-  attr_accessor :name, :type, :score, :move_record[m
[31m-[m
[31m-  include DisplayMessages[m
[31m-  def initialize[m
[31m-    @score = 0[m
[31m-    @move_record = [][m
[31m-    set_name[m
[31m-  end[m
[31m-[m
[31m-  def set_name[m
[31m-    welcome[m
[31m-    human_name if type == :human[m
[31m-    @name = COMPUTER_NAMES.sample if type == :computer[m
[31m-  end[m
[31m-[m
[31m-  def human_name[m
[31m-    name = ''[m
[31m-    loop do[m
[31m-      name = gets.chomp[m
[31m-      break if !name.empty?[m
[31m-      prompt MESSAGES['valid_name'][m
[31m-    end[m
[31m-    @name = name[m
[31m-  end[m
[31m-[m
[31m-  def increment_score[m
[31m-    self.score += 1[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-class Human < Player[m
[31m-  attr_accessor :name, :type, :move, :score[m
[31m-[m
[31m-  def initialize[m
[31m-    @type = :human[m
[31m-    super[m
[31m-  end[m
[31m-[m
[31m-  def choose[m
[31m-    move_temp = ''[m
[31m-    loop do[m
[31m-      prompt "Choose your move: "[m
[31m-      puts MOVES[0, MOVES.length - 1].join(',').concat(' or ', MOVES[-1])[m
[31m-      move_temp = gets.chomp[m
[31m-      break if MOVES.include?(move_temp)[m
[31m-    end[m
[31m-    @move = Move.new(move_temp)[m
[31m-    @move_record.push(move.move_type)[m
[31m-    display_move[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-class Computer < Player[m
[31m-  attr_accessor :name, :type, :move, :score[m
[31m-[m
[31m-  def initialize[m
[31m-    @type = :computer[m
[31m-    super[m
[31m-  end[m
[31m-[m
[31m-  def choose[m
[31m-    if COMPUTER_MOVES.keys.include?(name)[m
[31m-      puts "name is in keyss"[m
[31m-      @move = Move.new(COMPUTER_MOVES[name].sample)[m
[31m-    else[m
[31m-      puts 'Name is not in keys'[m
[31m-      @move = Move.new(MOVES.sample)[m
[31m-    end[m
[31m-    @move_record.push(move.move_type)[m
[31m-    display_move[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-class Move[m
[31m-  attr_accessor :move_type[m
[31m-[m
[31m-  include DisplayMessages[m
[31m-[m
[31m-  def initialize(mv)[m
[31m-    @move_type = mv[m
[31m-  end[m
[31m-[m
[31m-  def >(other_move)[m
[31m-    WINNING_COMB[move_type].include?(other_move.move_type)[m
[31m-  end[m
[31m-[m
[31m-  def <(other_move)[m
[31m-    WINNING_COMB[other_move.move_type].include?(move_type)[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-class RpsEngine[m
[31m-  attr_accessor :p1, :p2[m
[31m-[m
[31m-  include DisplayMessages[m
[31m-[m
[31m-  def initialize(p1, p2)[m
[31m-    @p1 = p1[m
[31m-    @p2 = p2[m
[31m-  end[m
[31m-[m
[31m-  def choose[m
[31m-    p1.choose[m
[31m-    p2.choose[m
[31m-  end[m
[31m-[m
[31m-  def play_again?[m
[31m-    again = ''[m
[31m-    loop do[m
[31m-      puts "Do you want to play again (y/n)?"[m
[31m-      again = gets.chomp[m
[31m-      break if ['y', 'n'].include?(again.downcase)[m
[31m-      puts "Please enter 'y' or 'n'"[m
[31m-    end[m
[31m-    again.downcase == 'y'[m
[31m-  end[m
[31m-[m
[31m-  def game_winner[m
[31m-    if p1.move > p2.move[m
[31m-      p1.display_winner[m
[31m-      p1.increment_score[m
[31m-    elsif p1.move < p2.move[m
[31m-      p2.display_winner[m
[31m-      p2.increment_score[m
[31m-    else[m
[31m-      puts "Its a tie"[m
[31m-    end[m
[31m-  end[m
[31m-[m
[31m-  def rules_review[m
[31m-    prompt "Hello #{p1.name}"[m
[31m-    prompt "You will play against #{p2.name}"[m
[31m-    prompt "Do you want to review the rules? (Press 'y'[m
[31m-            to review rules or any other key to proceed)"[m
[31m-    rules_review = gets.chomp[m
[31m-    prompt MESSAGES['rules'] if rules_review.downcase.start_with?('y')[m
[31m-  end[m
[31m-[m
[31m-  def run_game[m
[31m-    rules_review[m
[31m-    loop do[m
[31m-      choose[m
[31m-      game_winner[m
[31m-      display_score(p1, p2)[m
[31m-      break if !play_again?[m
[31m-    end[m
[31m-    display_score(p1, p2)[m
[31m-    p1.display_history[m
[31m-    p2.display_history[m
[31m-  end[m
[31m-end[m
[31m-[m
[31m-fiz = Human.new[m
[31m-pc = Computer.new[m
[31m-game = RpsEngine.new(fiz, pc)[m
[31m-game.run_game[m
